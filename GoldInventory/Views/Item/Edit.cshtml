@model GoldInventory.Model.Item

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Item</h2>
@using (Html.BeginForm("Edit", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
if (Model.ThumbnailUri != null)
{
    <div class="text-center">
        <img src="@Model.ThumbnailUri.AbsoluteUri" width="300" height="300"/>
        <div>
            <a target="_blank" href="@Model.PhotoUri.AbsoluteUri">Enlarge Photo</a>
        </div>
    </div>
    <div>
        <span class="btn btn-success fileinput-button">
            <i class="glyphicon glyphicon-camera"></i>
            <span id="AddPhotosText">Update Photo</span>
            <input type="file" accept="image/*" name="Photo" id="Photo" value="Camera" title="Camera" onchange="updateFileName(this)" />
        </span>
        <span id="fileNameSpan"></span>
    </div>
}
else
{
    <div>
        <span class="btn btn-success fileinput-button">
            <i class="glyphicon glyphicon-camera"></i>
            <span id="AddPhotosText">Add Photo</span>
            <input type="file" accept="image/*" name="Photo" id="Photo" value="Camera" title="Camera" onchange="updateFileName(this)" />
        </span>
        <span id="fileNameSpan"></span>
    </div>
}
<span class="text-info"><i class="glyphicon glyphicon-info-sign"></i> You could see the updated photo only after Save.</span>


    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.AvailableCategories, "Id", "Name", Model.CategoryId), new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
            </div>
        </div>

        @foreach (var attr in Model.AssociatedAttributes)
        {
            <div class="form-group">
                <label class="control-label col-md-2">@attr.AttributeName</label>
                <div class="col-md-10">
                    @if (attr.AttributeType == "string")
                    {
                        <input id="@attr.AttributeId" value="@attr.Value" name="@attr.AttributeId" class="form-control" />
                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="@attr.AttributeId"></span>
                    }
                    else
                    {
                        <input id="@attr.AttributeId" type="number" value="@attr.Value" name="@attr.AttributeId" class="form-control" />
                        <span class="field-validation-valid text-danger" data-valmsg-replace="true" data-valmsg-for="@attr.AttributeId"></span>
                    }
                    
                    <input id="@attr.AttributeId@attr.ItemId" name="@attr.AttributeId@attr.ItemId" value="@attr.Id" type="hidden"/>
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
